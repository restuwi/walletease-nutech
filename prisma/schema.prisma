// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  first_name String
  last_name String
  password String
  profile Profile?
  balance Balance?
  transaction Transaction[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("users")
}

model Profile {
  id Int @id @default(autoincrement())
  user_id Int @unique
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  profile_image String?

  @@map("profiles")
}

model Balance {
  id Int @id @default(autoincrement())
  user_id Int @unique
  amount Int
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("balances")
}

model Banner {
  id Int @id @default(autoincrement())
  banner_name String
  banner_image String
  description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("banners")
}

model Service {
  service_code String @id @unique
  service_name String
  service_icon String
  service_tarif Int
  transaction Transaction[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("services")
}

model Transaction {
  id Int @id @default(autoincrement())
  user_id Int
  service_code String
  service Service @relation(fields: [service_code], references: [service_code], onDelete: Cascade, onUpdate: Cascade)
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  total_amount Int
  invoice_number String @unique
  transaction_type String
  description String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt @default(now())

  @@map("transactions")
}